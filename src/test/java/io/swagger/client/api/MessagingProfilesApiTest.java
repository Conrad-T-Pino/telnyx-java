/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CreateMessagingProfilesResponse;
import io.swagger.client.model.DeleteMessagingProfileResponse;
import io.swagger.client.model.Errors;
import io.swagger.client.model.ListMessagingProfileMetricsResponse;
import io.swagger.client.model.ListMessagingProfilesResponse;
import io.swagger.client.model.NewMessagingProfile;
import io.swagger.client.model.RetrieveMessagingProfileMetricsResponse;
import io.swagger.client.model.RetrieveMessagingProfilePhoneNumbersResponse;
import io.swagger.client.model.RetrieveMessagingProfileResponse;
import io.swagger.client.model.RetrieveMessagingProfileShortCodesResponse;
import java.util.UUID;
import io.swagger.client.model.UpdateMessagingProfileResponse;
import io.swagger.client.model.UpdatedMessagingProfile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessagingProfilesApi
 */
@Ignore
public class MessagingProfilesApiTest {

    private final MessagingProfilesApi api = new MessagingProfilesApi();

    /**
     * Create a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMessagingProfileTest() throws ApiException {
        NewMessagingProfile body = null;
        CreateMessagingProfilesResponse response = api.createMessagingProfile(body);

        // TODO: test validations
    }
    /**
     * Delete a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMessagingProfileTest() throws ApiException {
        UUID id = null;
        DeleteMessagingProfileResponse response = api.deleteMessagingProfile(id);

        // TODO: test validations
    }
    /**
     * Get detailed messaging metrics for a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagingProfileDetailedMetricsTest() throws ApiException {
        UUID id = null;
        String timeFrame = null;
        RetrieveMessagingProfileMetricsResponse response = api.getMessagingProfileDetailedMetrics(id, timeFrame);

        // TODO: test validations
    }
    /**
     * List high-level messaging profile metrics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMessagingProfileMetricsTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        UUID id = null;
        String timeFrame = null;
        ListMessagingProfileMetricsResponse response = api.listMessagingProfileMetrics(pageNumber, pageSize, id, timeFrame);

        // TODO: test validations
    }
    /**
     * List all phone numbers associated with a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMessagingProfilePhoneNumbersTest() throws ApiException {
        UUID id = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        RetrieveMessagingProfilePhoneNumbersResponse response = api.listMessagingProfilePhoneNumbers(id, pageNumber, pageSize);

        // TODO: test validations
    }
    /**
     * List all short codes associated with a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMessagingProfileShortCodesTest() throws ApiException {
        UUID id = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        RetrieveMessagingProfileShortCodesResponse response = api.listMessagingProfileShortCodes(id, pageNumber, pageSize);

        // TODO: test validations
    }
    /**
     * List all messaging profiles
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMessagingProfilesTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        ListMessagingProfilesResponse response = api.listMessagingProfiles(pageNumber, pageSize);

        // TODO: test validations
    }
    /**
     * Retrieve a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveMessagingProfileTest() throws ApiException {
        UUID id = null;
        RetrieveMessagingProfileResponse response = api.retrieveMessagingProfile(id);

        // TODO: test validations
    }
    /**
     * Update a messaging profile
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMessagingProfileTest() throws ApiException {
        UpdatedMessagingProfile body = null;
        UUID id = null;
        UpdateMessagingProfileResponse response = api.updateMessagingProfile(body, id);

        // TODO: test validations
    }
}
