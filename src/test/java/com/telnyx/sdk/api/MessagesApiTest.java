/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.*;

import java.util.UUID;

import org.junit.*;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

/**
 * API tests for MessagesApi
 */
public class MessagesApiTest {

    private final MessagesApi api = new MessagesApi();

    @Before
    public void setup() {
        ApiClient defaultClient = Configuration.getDefaultApiClient();
        defaultClient.setBasePath(TestConfiguration.MOCK_SERVER_URL);

        HttpBearerAuth bearerAuth = (HttpBearerAuth) defaultClient.getAuthentication("bearerAuth");
        bearerAuth.setBearerToken(TestConfiguration.API_KEY);
    }

    /**
     * Send a long code message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLongCodeMessageTest() throws ApiException {
        CreateLongCodeMessageRequest createLongCodeMessageRequest = new CreateLongCodeMessageRequest()
                .from(TestConfiguration.TEST_FROM_NUMBER)
                .to(TestConfiguration.TEST_TO_NUMBER)
                .text("Long Code Message Test")
                .useProfileWebhooks(false)
                .webhookUrl("http://webhook.com");

        MessageResponse actualResponse = api.createLongCodeMessage(createLongCodeMessageRequest);

        assertNotNull(actualResponse.getData().getId());
    }

    /**
     * Send a message
     *
     * Send a message with a Phone Number, Alphanumeric Sender ID, Short Code or Number Pool.  This endpoint allows you to send a message with any messaging resource. Current messaging resources include: long-code, short-code, number-pool, and alphanumeric-sender-id. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMessageTest() throws ApiException {
        CreateMessageRequest createMessageRequest = new CreateMessageRequest()
                .from(TestConfiguration.TEST_FROM_NUMBER)
                .to(TestConfiguration.TEST_TO_NUMBER)
                .text("Message Test")
                .useProfileWebhooks(false)
                .webhookUrl("http://webhook.com");

        MessageResponse actualResponse = api.createMessage(createMessageRequest);

        assertNotNull(actualResponse.getData().getId());
    }

    /**
     * Send a message using number pool
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNumberPoolMessageTest() throws ApiException {
        CreateNumberPoolMessageRequest createNumberPoolMessageRequest = new CreateNumberPoolMessageRequest()
                .messagingProfileId(TestConfiguration.EXISTING_MESSAGING_PROFILE_ID)
                .to(TestConfiguration.TEST_TO_NUMBER)
                .text("Number Pool Message Test")
                .useProfileWebhooks(false)
                .webhookUrl("http://webhook.com");

        MessageResponse actualResponse = api.createNumberPoolMessage(createNumberPoolMessageRequest);

        assertNotNull(actualResponse.getData().getId());
    }

    /**
     * Send a short code message
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createShortCodeMessageTest() throws ApiException {
        //CreateShortCodeMessageRequest createShortCodeMessageRequest = null;
        //MessageResponse response = api.createShortCodeMessage(createShortCodeMessageRequest);
        // TODO: test validations
    }

    /**
     * Retrieve a message
     *
     * Note: This API endpoint can only retrieve messages that are no older than 10 days since their creation. If you require messages older than this, please generate an [MDR report.](https://developers.telnyx.com/docs/api/v1/reports/MDR-Reports)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveMessageTest() throws ApiException {
        CreateMessageRequest createMessageRequest = new CreateMessageRequest()
                .from(TestConfiguration.TEST_FROM_NUMBER)
                .to(TestConfiguration.TEST_TO_NUMBER)
                .text("Existing Message");

        UUID expectedId = api.createMessage(createMessageRequest).getData().getId();

        MessageResponse actualResponse = api.retrieveMessage(expectedId);

        assertEquals(expectedId, actualResponse.getData().getId());
    }

}
