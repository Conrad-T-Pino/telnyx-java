/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.ConnectionResponse;
import com.telnyx.sdk.model.ListConnectionsResponse;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.Assert.assertNotNull;

/**
 * API tests for ConnectionsApi
 */
public class ConnectionsApiTest {

    private final ConnectionsApi api = new ConnectionsApi();
    private ObjectMapper mapper;

    @Before
    public void setup() {
        ApiClient defaultClient = Configuration.getDefaultApiClient();
        defaultClient.setBasePath(TestConfiguration.MOCK_SERVER_URL);

        HttpBearerAuth bearerAuth = (HttpBearerAuth) defaultClient.getAuthentication("bearerAuth");
        bearerAuth.setBearerToken(TestConfiguration.API_KEY);

        mapper = new JSON().getMapper();
    }

    /**
     * List connections
     *
     * Returns a list of your connections irrespective of type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listConnectionsTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        String filterConnectionNameContains = null;
        String filterOutboundVoiceProfileId = null;
        String sort = null;
        ListConnectionsResponse response = api.listConnections(pageNumber, pageSize, filterConnectionNameContains, filterOutboundVoiceProfileId, sort);
        assertNotNull(response);
    }

    /**
     * Retrieve a connection
     *
     * Retrieves the high-level details of an existing connection. To retrieve specific authentication information, use the endpoint for the specific connection type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveConnectionTest() throws ApiException {
        //String id = null;
        //ConnectionResponse response = api.retrieveConnection(id);
        // TODO: test validations
    }

}
