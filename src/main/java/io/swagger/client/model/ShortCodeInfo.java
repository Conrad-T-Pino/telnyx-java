/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This information is attached to messages that are sent from short codes. It includes carrier information, which can influence billing.
 */
@Schema(description = "This information is attached to messages that are sent from short codes. It includes carrier information, which can influence billing.")

public class ShortCodeInfo {
  /**
   * Identifies the type of the resource.
   */
  @JsonAdapter(RecordTypeEnum.Adapter.class)
  public enum RecordTypeEnum {
    BLOB("short_code_info_blob");

    private String value;

    RecordTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RecordTypeEnum fromValue(String text) {
      for (RecordTypeEnum b : RecordTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RecordTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecordTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecordTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RecordTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("record_type")
  private RecordTypeEnum recordType = null;

  @SerializedName("om_carrier")
  private String omCarrier = null;

  @SerializedName("om_normalized_carrier")
  private String omNormalizedCarrier = null;

  public ShortCodeInfo recordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @Schema(example = "short_code_info_blob", description = "Identifies the type of the resource.")
  public RecordTypeEnum getRecordType() {
    return recordType;
  }

  public void setRecordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
  }

  public ShortCodeInfo omCarrier(String omCarrier) {
    this.omCarrier = omCarrier;
    return this;
  }

   /**
   * Get omCarrier
   * @return omCarrier
  **/
  @Schema(description = "")
  public String getOmCarrier() {
    return omCarrier;
  }

  public void setOmCarrier(String omCarrier) {
    this.omCarrier = omCarrier;
  }

  public ShortCodeInfo omNormalizedCarrier(String omNormalizedCarrier) {
    this.omNormalizedCarrier = omNormalizedCarrier;
    return this;
  }

   /**
   * Get omNormalizedCarrier
   * @return omNormalizedCarrier
  **/
  @Schema(description = "")
  public String getOmNormalizedCarrier() {
    return omNormalizedCarrier;
  }

  public void setOmNormalizedCarrier(String omNormalizedCarrier) {
    this.omNormalizedCarrier = omNormalizedCarrier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShortCodeInfo shortCodeInfo = (ShortCodeInfo) o;
    return Objects.equals(this.recordType, shortCodeInfo.recordType) &&
        Objects.equals(this.omCarrier, shortCodeInfo.omCarrier) &&
        Objects.equals(this.omNormalizedCarrier, shortCodeInfo.omNormalizedCarrier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, omCarrier, omNormalizedCarrier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShortCodeInfo {\n");
    
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    omCarrier: ").append(toIndentedString(omCarrier)).append("\n");
    sb.append("    omNormalizedCarrier: ").append(toIndentedString(omNormalizedCarrier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
