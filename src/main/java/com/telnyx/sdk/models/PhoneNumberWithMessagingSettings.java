/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.telnyx.sdk.models.NumberHealthMetrics;
import com.telnyx.sdk.models.PhoneNumberWithMessagingSettingsFeatures;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * PhoneNumberWithMessagingSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PhoneNumberWithMessagingSettings {
  private static final long serialVersionUID = 1L;

  /**
   * Identifies the type of the resource.
   */
  @JsonAdapter(RecordTypeEnum.Adapter.class)
  public enum RecordTypeEnum {
    MESSAGING_PHONE_NUMBER("messaging_phone_number");

    private String value;

    RecordTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecordTypeEnum fromValue(String value) {
      for (RecordTypeEnum b : RecordTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecordTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecordTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecordTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecordTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RECORD_TYPE = "record_type";
  @SerializedName(SERIALIZED_NAME_RECORD_TYPE)
  private RecordTypeEnum recordType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_MESSAGING_PROFILE_ID = "messaging_profile_id";
  @SerializedName(SERIALIZED_NAME_MESSAGING_PROFILE_ID)
  private String messagingProfileId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  /**
   * The type of the phone number
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    LONG_CODE("long-code"),
    
    TOLL_FREE("toll-free"),
    
    SHORT_CODE("short-code");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_HEALTH = "health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private NumberHealthMetrics health;

  public static final String SERIALIZED_NAME_ELIGIBLE_MESSAGING_PRODUCTS = "eligible_messaging_products";
  @SerializedName(SERIALIZED_NAME_ELIGIBLE_MESSAGING_PRODUCTS)
  private List<String> eligibleMessagingProducts = null;

  public static final String SERIALIZED_NAME_TRAFFIC_TYPE = "traffic_type";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_TYPE)
  private String trafficType;

  public static final String SERIALIZED_NAME_MESSAGING_PRODUCT = "messaging_product";
  @SerializedName(SERIALIZED_NAME_MESSAGING_PRODUCT)
  private String messagingProduct;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private PhoneNumberWithMessagingSettingsFeatures features;


   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "messaging_phone_number", value = "Identifies the type of the resource.")

  public RecordTypeEnum getRecordType() {
    return recordType;
  }




   /**
   * Identifies the type of resource.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the type of resource.")

  public String getId() {
    return id;
  }




   /**
   * +E.164 formatted phone number.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "+E.164 formatted phone number.")

  public String getPhoneNumber() {
    return phoneNumber;
  }




  public PhoneNumberWithMessagingSettings messagingProfileId(String messagingProfileId) {
    
    this.messagingProfileId = messagingProfileId;
    return this;
  }

   /**
   * Unique identifier for a messaging profile.
   * @return messagingProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for a messaging profile.")

  public String getMessagingProfileId() {
    return messagingProfileId;
  }


  public void setMessagingProfileId(String messagingProfileId) {
    this.messagingProfileId = messagingProfileId;
  }


   /**
   * ISO 8601 formatted date indicating when the resource was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 8601 formatted date indicating when the resource was created.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * ISO 8601 formatted date indicating when the resource was updated.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 8601 formatted date indicating when the resource was updated.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




   /**
   * ISO 3166-1 alpha-2 country code.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "ISO 3166-1 alpha-2 country code.")

  public String getCountryCode() {
    return countryCode;
  }




   /**
   * The type of the phone number
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the phone number")

  public TypeEnum getType() {
    return type;
  }




  public PhoneNumberWithMessagingSettings health(NumberHealthMetrics health) {
    
    this.health = health;
    return this;
  }

   /**
   * Get health
   * @return health
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumberHealthMetrics getHealth() {
    return health;
  }


  public void setHealth(NumberHealthMetrics health) {
    this.health = health;
  }


   /**
   * The messaging products that this number can be registered to use
   * @return eligibleMessagingProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The messaging products that this number can be registered to use")

  public List<String> getEligibleMessagingProducts() {
    return eligibleMessagingProducts;
  }




   /**
   * The messaging traffic or use case for which the number is currently configured.
   * @return trafficType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P2P", value = "The messaging traffic or use case for which the number is currently configured.")

  public String getTrafficType() {
    return trafficType;
  }




  public PhoneNumberWithMessagingSettings messagingProduct(String messagingProduct) {
    
    this.messagingProduct = messagingProduct;
    return this;
  }

   /**
   * The messaging product that the number is registered to use
   * @return messagingProduct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P2P", value = "The messaging product that the number is registered to use")

  public String getMessagingProduct() {
    return messagingProduct;
  }


  public void setMessagingProduct(String messagingProduct) {
    this.messagingProduct = messagingProduct;
  }


  public PhoneNumberWithMessagingSettings features(PhoneNumberWithMessagingSettingsFeatures features) {
    
    this.features = features;
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PhoneNumberWithMessagingSettingsFeatures getFeatures() {
    return features;
  }


  public void setFeatures(PhoneNumberWithMessagingSettingsFeatures features) {
    this.features = features;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumberWithMessagingSettings phoneNumberWithMessagingSettings = (PhoneNumberWithMessagingSettings) o;
    return Objects.equals(this.recordType, phoneNumberWithMessagingSettings.recordType) &&
        Objects.equals(this.id, phoneNumberWithMessagingSettings.id) &&
        Objects.equals(this.phoneNumber, phoneNumberWithMessagingSettings.phoneNumber) &&
        Objects.equals(this.messagingProfileId, phoneNumberWithMessagingSettings.messagingProfileId) &&
        Objects.equals(this.createdAt, phoneNumberWithMessagingSettings.createdAt) &&
        Objects.equals(this.updatedAt, phoneNumberWithMessagingSettings.updatedAt) &&
        Objects.equals(this.countryCode, phoneNumberWithMessagingSettings.countryCode) &&
        Objects.equals(this.type, phoneNumberWithMessagingSettings.type) &&
        Objects.equals(this.health, phoneNumberWithMessagingSettings.health) &&
        Objects.equals(this.eligibleMessagingProducts, phoneNumberWithMessagingSettings.eligibleMessagingProducts) &&
        Objects.equals(this.trafficType, phoneNumberWithMessagingSettings.trafficType) &&
        Objects.equals(this.messagingProduct, phoneNumberWithMessagingSettings.messagingProduct) &&
        Objects.equals(this.features, phoneNumberWithMessagingSettings.features);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, id, phoneNumber, messagingProfileId, createdAt, updatedAt, countryCode, type, health, eligibleMessagingProducts, trafficType, messagingProduct, features);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumberWithMessagingSettings {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    messagingProfileId: ").append(toIndentedString(messagingProfileId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    eligibleMessagingProducts: ").append(toIndentedString(eligibleMessagingProducts)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("    messagingProduct: ").append(toIndentedString(messagingProduct)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

