/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * The emergency services settings for a phone number.
 */
@ApiModel(description = "The emergency services settings for a phone number.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EmergencySettings {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_EMERGENCY_ENABLED = "emergency_enabled";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_ENABLED)
  private Boolean emergencyEnabled = false;

  public static final String SERIALIZED_NAME_EMERGENCY_ADDRESS_ID = "emergency_address_id";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_ADDRESS_ID)
  private String emergencyAddressId;

  /**
   * Represents the state of the number regarding emergency activation.
   */
  @JsonAdapter(EmergencyStatusEnum.Adapter.class)
  public enum EmergencyStatusEnum {
    DISABLED("disabled"),
    
    ACTIVE("active"),
    
    PROVISIONING("provisioning"),
    
    DEPROVISIONING("deprovisioning");

    private String value;

    EmergencyStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EmergencyStatusEnum fromValue(String value) {
      for (EmergencyStatusEnum b : EmergencyStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EmergencyStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EmergencyStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EmergencyStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EmergencyStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EMERGENCY_STATUS = "emergency_status";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_STATUS)
  private EmergencyStatusEnum emergencyStatus = EmergencyStatusEnum.DISABLED;


  public EmergencySettings emergencyEnabled(Boolean emergencyEnabled) {
    
    this.emergencyEnabled = emergencyEnabled;
    return this;
  }

   /**
   * Allows you to enable or disable emergency services on the phone number. In order to enable emergency services, you must also set an emergency_address_id.
   * @return emergencyEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows you to enable or disable emergency services on the phone number. In order to enable emergency services, you must also set an emergency_address_id.")

  public Boolean getEmergencyEnabled() {
    return emergencyEnabled;
  }


  public void setEmergencyEnabled(Boolean emergencyEnabled) {
    this.emergencyEnabled = emergencyEnabled;
  }


  public EmergencySettings emergencyAddressId(String emergencyAddressId) {
    
    this.emergencyAddressId = emergencyAddressId;
    return this;
  }

   /**
   * Identifies the address to be used with emergency services.
   * @return emergencyAddressId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the address to be used with emergency services.")

  public String getEmergencyAddressId() {
    return emergencyAddressId;
  }


  public void setEmergencyAddressId(String emergencyAddressId) {
    this.emergencyAddressId = emergencyAddressId;
  }


  public EmergencySettings emergencyStatus(EmergencyStatusEnum emergencyStatus) {
    
    this.emergencyStatus = emergencyStatus;
    return this;
  }

   /**
   * Represents the state of the number regarding emergency activation.
   * @return emergencyStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents the state of the number regarding emergency activation.")

  public EmergencyStatusEnum getEmergencyStatus() {
    return emergencyStatus;
  }


  public void setEmergencyStatus(EmergencyStatusEnum emergencyStatus) {
    this.emergencyStatus = emergencyStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmergencySettings emergencySettings = (EmergencySettings) o;
    return Objects.equals(this.emergencyEnabled, emergencySettings.emergencyEnabled) &&
        Objects.equals(this.emergencyAddressId, emergencySettings.emergencyAddressId) &&
        Objects.equals(this.emergencyStatus, emergencySettings.emergencyStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emergencyEnabled, emergencyAddressId, emergencyStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmergencySettings {\n");
    sb.append("    emergencyEnabled: ").append(toIndentedString(emergencyEnabled)).append("\n");
    sb.append("    emergencyAddressId: ").append(toIndentedString(emergencyAddressId)).append("\n");
    sb.append("    emergencyStatus: ").append(toIndentedString(emergencyStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

