/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.telnyx.sdk.models.CallForwarding;
import com.telnyx.sdk.models.CallRecording;
import com.telnyx.sdk.models.CnamListing;
import com.telnyx.sdk.models.EmergencySettings;
import com.telnyx.sdk.models.MediaFeatures;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * PhoneNumberWithVoiceSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PhoneNumberWithVoiceSettings {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_RECORD_TYPE = "record_type";
  @SerializedName(SERIALIZED_NAME_RECORD_TYPE)
  private String recordType;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_CONNECTION_ID = "connection_id";
  @SerializedName(SERIALIZED_NAME_CONNECTION_ID)
  private String connectionId;

  public static final String SERIALIZED_NAME_TECH_PREFIX_ENABLED = "tech_prefix_enabled";
  @SerializedName(SERIALIZED_NAME_TECH_PREFIX_ENABLED)
  private Boolean techPrefixEnabled = false;

  public static final String SERIALIZED_NAME_TRANSLATED_NUMBER = "translated_number";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_NUMBER)
  private String translatedNumber = "";

  public static final String SERIALIZED_NAME_CALL_FORWARDING = "call_forwarding";
  @SerializedName(SERIALIZED_NAME_CALL_FORWARDING)
  private CallForwarding callForwarding;

  public static final String SERIALIZED_NAME_CNAM_LISTING = "cnam_listing";
  @SerializedName(SERIALIZED_NAME_CNAM_LISTING)
  private CnamListing cnamListing;

  public static final String SERIALIZED_NAME_EMERGENCY = "emergency";
  @SerializedName(SERIALIZED_NAME_EMERGENCY)
  private EmergencySettings emergency;

  /**
   * Controls whether a number is billed per minute or uses your concurrent channels.
   */
  @JsonAdapter(UsagePaymentMethodEnum.Adapter.class)
  public enum UsagePaymentMethodEnum {
    PAY_PER_MINUTE("pay-per-minute"),
    
    CHANNEL("channel");

    private String value;

    UsagePaymentMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UsagePaymentMethodEnum fromValue(String value) {
      for (UsagePaymentMethodEnum b : UsagePaymentMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<UsagePaymentMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UsagePaymentMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UsagePaymentMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return UsagePaymentMethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_USAGE_PAYMENT_METHOD = "usage_payment_method";
  @SerializedName(SERIALIZED_NAME_USAGE_PAYMENT_METHOD)
  private UsagePaymentMethodEnum usagePaymentMethod = UsagePaymentMethodEnum.PAY_PER_MINUTE;

  public static final String SERIALIZED_NAME_MEDIA_FEATURES = "media_features";
  @SerializedName(SERIALIZED_NAME_MEDIA_FEATURES)
  private MediaFeatures mediaFeatures;

  public static final String SERIALIZED_NAME_CALL_RECORDING = "call_recording";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING)
  private CallRecording callRecording;


   /**
   * Identifies the type of resource.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1293384261075731499", value = "Identifies the type of resource.")

  public String getId() {
    return id;
  }




   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "voice_settings", value = "Identifies the type of the resource.")

  public String getRecordType() {
    return recordType;
  }




   /**
   * The phone number in +E164 format.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13035551234", value = "The phone number in +E164 format.")

  public String getPhoneNumber() {
    return phoneNumber;
  }




  public PhoneNumberWithVoiceSettings connectionId(String connectionId) {
    
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Identifies the connection associated with this phone number.
   * @return connectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1d0e6cb8-8668-462e-94c6-49ae0f0ed48b", value = "Identifies the connection associated with this phone number.")

  public String getConnectionId() {
    return connectionId;
  }


  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }


  public PhoneNumberWithVoiceSettings techPrefixEnabled(Boolean techPrefixEnabled) {
    
    this.techPrefixEnabled = techPrefixEnabled;
    return this;
  }

   /**
   * Controls whether a tech prefix is enabled for this phone number.
   * @return techPrefixEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Controls whether a tech prefix is enabled for this phone number.")

  public Boolean getTechPrefixEnabled() {
    return techPrefixEnabled;
  }


  public void setTechPrefixEnabled(Boolean techPrefixEnabled) {
    this.techPrefixEnabled = techPrefixEnabled;
  }


  public PhoneNumberWithVoiceSettings translatedNumber(String translatedNumber) {
    
    this.translatedNumber = translatedNumber;
    return this;
  }

   /**
   * This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed.
   * @return translatedNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13035559999", value = "This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed.")

  public String getTranslatedNumber() {
    return translatedNumber;
  }


  public void setTranslatedNumber(String translatedNumber) {
    this.translatedNumber = translatedNumber;
  }


  public PhoneNumberWithVoiceSettings callForwarding(CallForwarding callForwarding) {
    
    this.callForwarding = callForwarding;
    return this;
  }

   /**
   * Get callForwarding
   * @return callForwarding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CallForwarding getCallForwarding() {
    return callForwarding;
  }


  public void setCallForwarding(CallForwarding callForwarding) {
    this.callForwarding = callForwarding;
  }


  public PhoneNumberWithVoiceSettings cnamListing(CnamListing cnamListing) {
    
    this.cnamListing = cnamListing;
    return this;
  }

   /**
   * Get cnamListing
   * @return cnamListing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CnamListing getCnamListing() {
    return cnamListing;
  }


  public void setCnamListing(CnamListing cnamListing) {
    this.cnamListing = cnamListing;
  }


  public PhoneNumberWithVoiceSettings emergency(EmergencySettings emergency) {
    
    this.emergency = emergency;
    return this;
  }

   /**
   * Get emergency
   * @return emergency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmergencySettings getEmergency() {
    return emergency;
  }


  public void setEmergency(EmergencySettings emergency) {
    this.emergency = emergency;
  }


  public PhoneNumberWithVoiceSettings usagePaymentMethod(UsagePaymentMethodEnum usagePaymentMethod) {
    
    this.usagePaymentMethod = usagePaymentMethod;
    return this;
  }

   /**
   * Controls whether a number is billed per minute or uses your concurrent channels.
   * @return usagePaymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pay-per-minute", value = "Controls whether a number is billed per minute or uses your concurrent channels.")

  public UsagePaymentMethodEnum getUsagePaymentMethod() {
    return usagePaymentMethod;
  }


  public void setUsagePaymentMethod(UsagePaymentMethodEnum usagePaymentMethod) {
    this.usagePaymentMethod = usagePaymentMethod;
  }


  public PhoneNumberWithVoiceSettings mediaFeatures(MediaFeatures mediaFeatures) {
    
    this.mediaFeatures = mediaFeatures;
    return this;
  }

   /**
   * Get mediaFeatures
   * @return mediaFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MediaFeatures getMediaFeatures() {
    return mediaFeatures;
  }


  public void setMediaFeatures(MediaFeatures mediaFeatures) {
    this.mediaFeatures = mediaFeatures;
  }


  public PhoneNumberWithVoiceSettings callRecording(CallRecording callRecording) {
    
    this.callRecording = callRecording;
    return this;
  }

   /**
   * Get callRecording
   * @return callRecording
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CallRecording getCallRecording() {
    return callRecording;
  }


  public void setCallRecording(CallRecording callRecording) {
    this.callRecording = callRecording;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumberWithVoiceSettings phoneNumberWithVoiceSettings = (PhoneNumberWithVoiceSettings) o;
    return Objects.equals(this.id, phoneNumberWithVoiceSettings.id) &&
        Objects.equals(this.recordType, phoneNumberWithVoiceSettings.recordType) &&
        Objects.equals(this.phoneNumber, phoneNumberWithVoiceSettings.phoneNumber) &&
        Objects.equals(this.connectionId, phoneNumberWithVoiceSettings.connectionId) &&
        Objects.equals(this.techPrefixEnabled, phoneNumberWithVoiceSettings.techPrefixEnabled) &&
        Objects.equals(this.translatedNumber, phoneNumberWithVoiceSettings.translatedNumber) &&
        Objects.equals(this.callForwarding, phoneNumberWithVoiceSettings.callForwarding) &&
        Objects.equals(this.cnamListing, phoneNumberWithVoiceSettings.cnamListing) &&
        Objects.equals(this.emergency, phoneNumberWithVoiceSettings.emergency) &&
        Objects.equals(this.usagePaymentMethod, phoneNumberWithVoiceSettings.usagePaymentMethod) &&
        Objects.equals(this.mediaFeatures, phoneNumberWithVoiceSettings.mediaFeatures) &&
        Objects.equals(this.callRecording, phoneNumberWithVoiceSettings.callRecording);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, recordType, phoneNumber, connectionId, techPrefixEnabled, translatedNumber, callForwarding, cnamListing, emergency, usagePaymentMethod, mediaFeatures, callRecording);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumberWithVoiceSettings {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    techPrefixEnabled: ").append(toIndentedString(techPrefixEnabled)).append("\n");
    sb.append("    translatedNumber: ").append(toIndentedString(translatedNumber)).append("\n");
    sb.append("    callForwarding: ").append(toIndentedString(callForwarding)).append("\n");
    sb.append("    cnamListing: ").append(toIndentedString(cnamListing)).append("\n");
    sb.append("    emergency: ").append(toIndentedString(emergency)).append("\n");
    sb.append("    usagePaymentMethod: ").append(toIndentedString(usagePaymentMethod)).append("\n");
    sb.append("    mediaFeatures: ").append(toIndentedString(mediaFeatures)).append("\n");
    sb.append("    callRecording: ").append(toIndentedString(callRecording)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

